# # Stage 1: Build Frontend
# FROM node:20 as frontend

# WORKDIR /app
# COPY ./vue-ui/*.json ./
# RUN rm ./package-lock.json
# COPY ./vue-ui/*.ts ./
# COPY ./vue-ui/*.html ./
# COPY ./vue-ui/src ./src
# COPY ./vue-ui/public ./public

# RUN npm install
# RUN npm run build

# Stage 2: Build Backend
FROM golang:latest as backend

WORKDIR /app
COPY ./games-go/go.mod ./
COPY ./games-go/go.sum ./
COPY ./games-go/.env ./
COPY ./games-go/cmd ./cmd
COPY ./games-go/internal ./internal
# COPY ./games-go/models ./models
# COPY --from=frontend /app/dist/index.html ./templates/index.html
# COPY --from=frontend /app/dist ./ui

RUN go mod download

RUN apt-get update && apt-get install -y build-essential

# Enable CGO and build the Go binary
RUN CGO_ENABLED=1 GOOS=linux go build -o /app/games-kevin-fechner ./cmd/api/main.go

# RUN go install github.com/air-verse/air@latest


# Stage 3: Create the final image
# FROM debian:stable-slim

# WORKDIR /app

# # Copy the binary and other necessary files to the production image
# COPY --from=backend /app/games-kevin-fechner /app/games-kevin-fechner
# # COPY --from=backend /app/ui/assets /app/assets
# # COPY --from=backend /app/ui/index.html /app/templates/index.html
# COPY --from=backend /app/.env /app/.env

EXPOSE 8080
CMD ["/app/games-kevin-fechner"]